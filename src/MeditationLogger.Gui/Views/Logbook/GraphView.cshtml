@using System;
@using System.Globalization;
@using System.Linq;
@using MeditationLogger.Api;

@model LogBook;

@{
    Layout = "_Content";
    TextInfo textInfo = CultureInfo.CurrentCulture.TextInfo;
}

@section scripts {
     <script type="text/javascript" src="/static/js/moment.min.js"></script>
     <script type="text/javascript" src="/static/js/Chart.min.js"></script>
     <script type="text/javascript">
        window.onload=function()
        {
            // Create start time chart
            {
                var startTimeElement = document.getElementById('starttime').getContext('2d');
                var chart = new Chart(
                    startTimeElement,
                    {
                        // The type of chart we want to create
                        type: 'bar',

                        // The data for our dataset
                        data: {
                            labels: [
                                @for(
                                    DateTime time = new DateTime(2000, 1, 1, 0, 0, 0);
                                    time < new DateTime(2000, 1, 2, 0, 0, 0);
                                    time += new TimeSpan(1, 0, 0)
                                )
                                {
                                    // No need for ToLocalTime(), as Logbook
                                    // uses local time to begin with since our database
                                    // retrieves from UTC time.
                                    @:'@(time.ToString("hh:mm tt"))',
                                }
                            ],
                            datasets: [{
                                label: "Times Started",
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: [
                                    @foreach(int count in Model.StartTimeBucket)
                                    {
                                        @:@(count),
                                    }
                                ],
                            }]
                        },

                        // Configuration options go here
                        options: {}
                    }
                );
            }

            // Create Technique Chart
            {
                var techniquesElement = document.getElementById('techniques').getContext('2d');
                var chart = new Chart(
                    techniquesElement,
                    {
                        // The type of chart we want to create
                        type: 'doughnut',

                        // The data for our dataset
                        data: {
                            labels: [
                                @foreach(KeyValuePair<string, int> technique in Model.Techniques)
                                {
                                    @:'@(textInfo.ToTitleCase(technique.Key))',
                                }
                            ],
                            datasets: [{
                                label: "Times Started",
                                backgroundColor: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Pink', 'Black', 'Orange'],
                                borderColor: 'White',
                                hoverBackgroundColor : 'White',
                                hoverBorderColor :['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Pink', 'Black', 'Orange'],
                                data: [
                                    @foreach(KeyValuePair<string, int> technique in Model.Techniques)
                                    {
                                        @:@(Model.Techniques[technique.Key]),
                                    }
                                ],
                            }]
                        },

                        // Configuration options go here
                        options: Chart.defaults.doughnut
                    }
                );
            }
            {
                var durationElement = document.getElementById('duration').getContext('2d');
                var chart = new Chart(
                    durationElement,
                    {
                        // The type of chart we want to create
                        type: 'bar',

                        // The data for our dataset
                        data: {
                                labels: [
                                    @foreach(Log log in Model.Reverse())
                                    {
                                        @:'@log.StartTime.ToString("MM/dd/yyyy")',
                                    }  
                                ],
                                datasets: [{
                                    backgroundColor: 'rgb(75, 192, 192)',
                                    borderColor: 'rgb(75, 192, 192)',
                                    label: 'Duration (Minutes)',
                                    data: [
                                        @foreach(Log log in Model.Reverse())
                                        {
                                            @:@log.Duration.TotalMinutes,
                                        }
                                    ]
                                }]
                        },
                        // Configuration options go here
                        options: {
 
                        }
                    }
                );
            }
        }
</script>
}

<noscript>
    <p>Javascript is required for the Graph View, sorry :(</p>
</noscript>

<h2>Duration</h2>
<canvas id="duration"></canvas>

<h2>Techniques</h2>
<canvas id="techniques"></canvas>

<h2>Times Started</h2>
<canvas id="starttime"></canvas>
